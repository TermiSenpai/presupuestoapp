name: Build Windows (PyInstaller)

on:
  push:
    branches: [ main ]        # ejecuta en cada push a main
  workflow_dispatch:          # permite lanzarlo manualmente

permissions:
  contents: write             # necesario para crear/actualizar releases

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Read version from __init__.py
        id: get_version
        shell: bash
        run: |
          python - << 'PY'
          import re, pathlib, os
          p = pathlib.Path("presupuestos_dtf/__init__.py")
          m = re.search(r'__version__\s*=\s*["\']([^"\']+)["\']', p.read_text(encoding="utf-8"))
          v = (m.group(1) if m else "").strip()
          if not v:
              raise SystemExit("No se encontró __version__ en presupuestos_dtf/__init__.py")
          open(os.environ["GITHUB_OUTPUT"], "a", encoding="utf-8").write(f"version={v}\n")
          print("VERSION:", v)
          PY

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }
          pip install pyinstaller

      - name: Build with PyInstaller
        shell: cmd
        run: |
          pyinstaller --noconfirm --clean --noconsole --onedir ^
            --name DTF_Pricing_Calculator ^
            --icon PresupuestosDTF.ico ^
            main.py

      - name: Zip dist
        shell: pwsh
        run: |
          $src = "dist\DTF_Pricing_Calculator"
          $dst = "dist\DTF_Pricing_Calculator.zip"
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          if (Test-Path $dst) { Remove-Item $dst -Force }
          [IO.Compression.ZipFile]::CreateFromDirectory(
            $src, $dst,
            [IO.Compression.CompressionLevel]::Optimal,
            $false
          )
          if ((Get-Item $dst).Length -lt 1KB) { throw "ZIP inválido (<1KB)" }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: DTF_Pricing_Calculator
          path: dist/DTF_Pricing_Calculator.zip
          if-no-files-found: error

      - name: Create/Update Release with version tag
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}             # tag = 1.2.2
          name: DTF Pricing Calculator ${{ steps.get_version.outputs.version }}  # título
          body: |
            Build automático para la versión ${{ steps.get_version.outputs.version }}.
            (Generado desde push a main)
          files: dist/DTF_Pricing_Calculator.zip
          generate_release_notes: true
          make_latest: true
          fail_on_unmatched_files: true
          replace_assets: true        # sustituye el ZIP si ya existía en esa release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
